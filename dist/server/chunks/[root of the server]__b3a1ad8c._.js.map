{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/awi/statistik-ipnu-ippnu-ponorogo/lib/mongodb.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst uri = process.env.MONGODB_URI;\nif (!uri) {\n  throw new Error(\"Please add your MongoDB URI to .env.local\");\n}\n\nconst options = {};\nlet client: MongoClient;\nlet clientPromise: Promise<MongoClient>;\n\ndeclare global {\n  var _mongoClientPromise: Promise<MongoClient> | undefined;\n}\n\nif (process.env.NODE_ENV === \"development\") {\n  if (!global._mongoClientPromise) {\n    client = new MongoClient(uri, options);\n    global._mongoClientPromise = client.connect();\n  }\n  clientPromise = global._mongoClientPromise;\n} else {\n  client = new MongoClient(uri, options);\n  clientPromise = client.connect();\n}\n\n// ✅ Fungsi utama untuk mengambil statistik\nexport async function getPacData() {\n  try {\n    const client = await clientPromise;\n    const today = new Date().toISOString().split(\"T\")[0];\n    const db = client.db(\"ipnu_ponorogo\");\n\n    const pacData = db.collection(\"database\");\n    const komisariatData = db.collection(\"database_komisariat\");\n    const rantingData = db.collection(\"database_ranting\");\n    const anggotaData = db.collection(\"data_anggota\");\n\n    const totalPAC = await pacData.countDocuments();\n    const totalSekolah = await komisariatData.countDocuments();\n    const totalDesa = await rantingData.countDocuments();\n    const totalAnggota = await anggotaData.countDocuments();\n    const totalRanting = await rantingData.countDocuments({\n      status_sp: \"Aktif\",\n      tanggal_sp: { $gte: today },\n    });\n    const totalKomisariat = await komisariatData.countDocuments({\n      status_sp: \"Aktif\",\n      tanggal_sp: { $gte: today },\n    });\n\n    return {\n      totalStats: {\n        totalPAC,\n        totalKomisariat,\n        totalRanting,\n        totalAnggota,\n        totalDesa,\n        totalSekolah,\n      },\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return { totalStats: {} };\n  }\n}\n\n// ✅ Fungsi untuk mendapatkan daftar kecamatan\nexport async function getKecamatanList() {\n  try {\n    const client = await clientPromise;\n    const db = client.db(\"ipnu_ponorogo\");\n    const kecamatanCollection = db.collection(\"database\");\n\n    const kecamatanList = await kecamatanCollection\n      .find({}, { projection: { _id: 1, kecamatan: 1 } })\n      .toArray();\n    return kecamatanList;\n  } catch (error) {\n    console.error(\"Error fetching kecamatan:\", error);\n    return [];\n  }\n}\n\n// ✅ Fungsi untuk mendapatkan kecamatan berdasarkan ID\nexport async function getKecamatanById(kecamatanId: string) {\n  try {\n    const client = await clientPromise;\n    const db = client.db(\"ipnu_ponorogo\");\n    const kecamatanCollection = db.collection(\"database\");\n\n    const kecamatan = await kecamatanCollection.findOne({\n      _id: new ObjectId(kecamatanId), // Sesuaikan dengan tipe `_id` di database\n    });\n\n    return kecamatan;\n  } catch (error) {\n    console.error(\"Error fetching kecamatan by ID:\", error);\n    return null;\n  }\n}\n\n// ✅ Fungsi untuk mendapatkan data PAC IPNU\nexport async function getPacIpnu() {\n  try {\n    const client = await clientPromise;\n    const db = client.db(\"ipnu_ponorogo\");\n    const pacIpnuCollection = db.collection(\"database\");\n\n    const ipnuList = await pacIpnuCollection.find().toArray();\n    return ipnuList;\n  } catch (error) {\n    console.error(\"Error fetching PAC IPNU data:\", error);\n    return [];\n  }\n}\n\n// ✅ Fungsi untuk mendapatkan data PAC IPPNU\nexport async function getPacIppnu() {\n  try {\n    const client = await clientPromise;\n    const db = client.db(\"ippnu_ponorogo\"); // Pastikan database ini benar\n    const pacIppnuCollection = db.collection(\"database\");\n\n    const ippnuList = await pacIppnuCollection.find().toArray();\n    return ippnuList;\n  } catch (error) {\n    console.error(\"Error fetching PAC IPPNU data:\", error);\n    return [];\n  }\n}\n\nexport default clientPromise;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/awi/statistik-ipnu-ippnu-ponorogo/app/api/kecamatan/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { getKecamatanList } from \"@/lib/mongodb\";\n\nexport async function GET() {\n  const kecamatanList = await getKecamatanList();\n  return NextResponse.json(kecamatanList);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,gBAAgB,MAAM,CAAA,GAAA,gHAAA,CAAA,mBAAgB,AAAD;IAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}